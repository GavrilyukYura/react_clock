{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","clockInterval","this","window","setInterval","setState","prevProps","name","props","console","log","toLocaleTimeString","clearInterval","Component","getRandomName","value","Math","random","toString","slice","App","clockName","hasClock","nameInterval","showClock","hideClock","document","addEventListener","ReactDOM","render","getElementById"],"mappings":"6MAUaA,EAAb,4MACEC,MAAyB,CACvBC,KAAM,IAAIC,MAFd,EAKEC,cAAgB,EALlB,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,cAAgBE,OAAOC,aAAY,WACtC,EAAKC,SAAS,CAAEN,KAAM,IAAIC,SACzB,OAVP,gCAaE,SAAmBM,GACbA,EAAUC,OAASL,KAAKM,MAAMD,MAEhCE,QAAQC,IAAR,uBAA4BJ,EAAUC,KAAtC,eAAiDL,KAAKM,MAAMD,OAI9DE,QAAQC,IAAR,eAAoBR,KAAKJ,MAAMC,KAAKY,yBApBxC,kCAuBE,WACEC,cAAcV,KAAKD,iBAxBvB,oBA2BE,WACE,OACE,qCACE,4BAAIC,KAAKM,MAAMD,OACf,6BAAKL,KAAKJ,MAAMC,KAAKY,8BA/B7B,GAA2BE,aCN3B,SAASC,IACP,IAAMC,EAAQC,KAAKC,SAASC,WAAWC,MAAM,EAAG,GAEhD,MAAM,SAAN,OAAgBJ,G,IAQZK,E,4MACJtB,MAAyB,CACvBuB,UAAWP,IACXQ,UAAU,G,EAGZC,aAAe,E,EAgBfC,UAAY,WACV,EAAKnB,SAAS,CAAEiB,UAAU,K,EAG5BG,UAAY,WACV,EAAKpB,SAAS,CAAEiB,UAAU,K,uDAnB5B,WAAqB,IAAD,OAClBI,SAASC,iBAAiB,cAAezB,KAAKuB,WAE9CC,SAASC,iBAAiB,QAASzB,KAAKsB,WAExCtB,KAAKqB,aAAepB,OAAOC,aAAY,WACrC,EAAKC,SAAS,CAAEgB,UAAWP,QAC1B,Q,kCAGL,WACEF,cAAcV,KAAKqB,gB,oBAWrB,WACE,OACE,gCACE,uCACCrB,KAAKJ,MAAMwB,UAAY,cAAC,EAAD,CAAOf,KAAML,KAAKJ,MAAMuB,mB,GAlCtCR,aAwCHO,ICpDfQ,IAASC,OACP,cAAC,EAAD,IACAH,SAASI,eAAe,W","file":"static/js/main.047ea6aa.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  name: string;\n};\n\ntype State = {\n  date: Date;\n};\n\nexport class Clock extends Component<Props, State> {\n  state: Readonly<State> = {\n    date: new Date(),\n  };\n\n  clockInterval = 0;\n\n  componentDidMount() {\n    this.clockInterval = window.setInterval(() => {\n      this.setState({ date: new Date() });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line no-console\n      console.log(`Renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n\n    // eslint-disable-next-line no-console\n    console.log(`Time ${this.state.date.toLocaleTimeString()}`);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.clockInterval);\n  }\n\n  render() {\n    return (\n      <>\n        <p>{this.props.name}</p>\n        <h2>{this.state.date.toLocaleTimeString()}</h2>\n      </>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\nfunction getRandomName(): string {\n  const value = Math.random().toString().slice(2, 6);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  clockName: string;\n  hasClock: boolean;\n};\n\nclass App extends Component<{}, State> {\n  state: Readonly<State> = {\n    clockName: getRandomName(),\n    hasClock: true,\n  };\n\n  nameInterval = 0;\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', this.hideClock);\n\n    document.addEventListener('click', this.showClock);\n\n    this.nameInterval = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.nameInterval);\n  }\n\n  showClock = () => {\n    this.setState({ hasClock: true });\n  };\n\n  hideClock = () => {\n    this.setState({ hasClock: false });\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Clock</h1>\n        {this.state.hasClock && <Clock name={this.state.clockName} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}